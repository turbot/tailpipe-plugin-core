name: Test Cross-Compile

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (without 'v')"
        required: true
        default: 0.1.\invalid

env:
  ORG: turbot
  CR: ghcr.io
  CR_PREFIX: turbot/tailpipe/plugins
  CONFIG_SCHEMA_VERSION: '2020-11-18'
  ORAS_VERSION: 1.1.0
  PIPELING: tailpipe

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Output pipeling name
        run: |
          echo "Pipeling name: ${{ env.PIPELING }}"
          echo "PIPELING_NAME=${{ env.PIPELING }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ env.PIPELING }}-plugin
          fetch-depth: 0
      - name: Set environment variables
        run: |
          plugin_name=$(echo $GITHUB_REPOSITORY | cut -d'-' -f 3)
          echo $plugin_name
          echo "PLUGIN_NAME=${plugin_name}" >> $GITHUB_ENV
      # Exit early if we don't need to build
      - name: Exit if goreleaser file is missing
        run: |
          cd ${{ inputs.pipeling }}-plugin
          test -f .goreleaser.yml
      - name: Set Version
        run: |
          echo "VERSION=v${{inputs.version}}" >> $GITHUB_ENV
      # this is required, check golangci-lint-action docs
      - uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: false # setup-go v4 caches by default, do not change this parameter, check golangci-lint-action doc: https://github.com/golangci/golangci-lint-action/pull/704

      - name: Setup release environment
        run: |-
          cd tailpipe
          echo 'GITHUB_TOKEN=${{secrets.GH_ACCESS_TOKEN}}' > .release-env

      - name: Release publish
        run: |-
          cd tailpipe
          make release